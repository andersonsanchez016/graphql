"Valida los tipos de nivel"
enum Level{
    principiante,
    intermedio,
    avanzado
}

type Course {
    _id:ID!,
    title:String!
    teacher:String!
    description:String!
    topic:String!
    students:[Student]
    level:Level!
}

interface person {
    _id:ID!,
    name:String!
    grade:String!
    age:Int!
}

type Student implements person{
    _id:ID!,
    name:String!
    grade:String!
    age:Int!
    avatar:String!
}

type monitor implements person {
    _id:ID!,
    name:String!
    grade:String!
    age:Int!
    phone:String!
}

type Query {
    getCourses:[Course]
    getCourse(id:String!):Course
    getPersons:[person]
}

input CourseInput{
    title:String!
    teacher:String!
    description:String!
    topic:String!
    level:Level!
}

input PersonInput{
    name:String!
    grade:String!
    age:Int!
    phone:String
    avatar:String
}

input editPersonInput{
    _id:String!
    name:String
    grade:String
    age:Int
    phone:String
    avatar:String

}

input removePerson{
    _id:String!
}


type Mutation {
"crea un curso"
CreateCourse(input:CourseInput!):Course
"crea un estudiante"
CreatePerson(input:PersonInput):Student
"edita un estudiante"
EditPerson(input:editPersonInput):Student
"elimina un estudiante"
RemovePerson(input:removePerson):person
"agrega un estudiante a un curso"
AddPersonToCourse(courseId:ID!,personId:ID!):Course
}
